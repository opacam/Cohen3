name: Unit tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DISPLAY: ':99.0'
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        export PATH=/usr/bin:$PATH
        sudo apt-get update -q
        sudo apt-get install libdbus-1-dev
        sudo apt-get install libdiscid0
        sudo apt-get install --yes gstreamer1.0-alsa gstreamer1.0-plugins-bad gstreamer1.0-plugins-base gstreamer1.0-plugins-base-apps gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-libav
        sudo apt-get install -y libgirepository1.0-dev libcairo2-dev gir1.2-gtk-3.0 gobject-introspection python3-gi python3-gi-cairo gir1.2-gtk-3.0 python3-gst-1.0
        sudo apt-get install -y xvfb
        sudo apt-get install dbus-x11
        /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16
        export $(dbus-launch)
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .[dev,mediadb]
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 --count --select=E9,F63,F7,F82 --show-source --statistics coherence/ tests/
        # exit-zero treats all errors as warnings
        flake8 --count --exit-zero --ignore=E402,W503 --max-complexity=10 --max-line-length=80 --statistics coherence/ tests/
    - name: Lint with pylint
      run: |
        pylint -E coherence --rcfile=.pylintrc
    - name: Unit tests with nose
      run: |
        nosetests --config=.noserc
    # The following steps will only be run for python 3.7
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.7'
      uses: codecov/codecov-action@v1.0.3
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        flags: unittest
        name: Cohen3
    - name: Build sphinx docs
      if: matrix.python-version == '3.7'
      run: |
        pip install travis-sphinx
        pip install sphinx-rtd-theme
        travis-sphinx build -n --source=docs
    # We only deploy docs when we merging to master branch
    - name: Deploy sphinx docs
      if: matrix.python-version == '3.7' && github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        travis-sphinx deploy
